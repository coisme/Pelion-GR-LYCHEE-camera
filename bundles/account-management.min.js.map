{"version":3,"sources":["account-management.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","MbedCloudSDK","AccountManagementApi","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","apiBase_1","sdkError_1","AccountAdminApi","_super","apply","arguments","addApiKeyToGroups","apiKey","body","callback","requestOptions","undefined","SDKError","headerParams","queryParameters","formParams","contentTypes","acceptTypes","request","url","replace","String","method","headers","query","useFormData","addCertificate","addSubjectsToGroup","groupID","addUserToGroups","userId","createGroup","createUser","action","deleteGroup","deleteUser","getAllUsers","limit","after","order","include","emailEq","statusEq","statusIn","statusNin","getGroupsOfApikey","getGroupsOfUser","getUser","properties","getUsersOfGroup","removeApiKeyFromGroups","removeUserFromGroups","removeUsersFromGroup","updateGroupName","updateMyAccount","updateUser","ApiBase","AggregatorAccountAdminApi","addAccountApiKeyToGroups","accountID","addAccountCertificate","addAccountUserToGroups","addSubjectsToAccountGroup","checkAccountApiKey","createAccount","createAccountApiKey","createAccountGroup","createAccountUser","deleteAccountApiKey","deleteAccountCertificate","certId","deleteAccountGroup","deleteAccountUser","getAccountApiKey","getAccountCertificate","getAccountGroupSummary","getAccountInfo","getAccountUser","getAllAccountApiKeys","keyEq","ownerEq","getAllAccountCertificates","nameEq","serviceEq","expireEq","deviceExecutionModeEq","deviceExecutionModeNeq","enrollmentModeEq","issuerLike","subjectLike","getAllAccountGroups","getAllAccountUsers","getAllAccounts","tierEq","parentEq","endMarketEq","countryLike","format","getApiKeysOfAccountGroup","getGroupsOfAccountApikey","getGroupsOfAccountUser","getUsersOfAccountGroup","removeAccountApiKeyFromGroups","removeAccountUserFromGroups","removeApiKeysFromAccountGroup","removeUsersFromAccountGroup","resetAccountApiKeySecret","updateAccount","updateAccountApiKey","updateAccountCertificate","updateAccountGroupName","updateAccountUser","validateAccountUserEmail","DeveloperApi","addMyApiKeyToGroups","createApiKey","deleteApiKey","deleteCertificate","getAllApiKeys","getAllCertificates","getAllGroups","getApiKey","getApiKeysOfGroup","getCertificate","getGroupSummary","getGroupsOfMyApiKey","getMyAccountInfo","getMyApiKey","removeApiKeysFromGroup","removeMyApiKeyFromGroups","updateApiKey","updateCertificate","updateMyApiKey","../common/apiBase","../common/sdkError","2","functions_1","listResponse_1","endpoints_1","accountAdapter_1","apiKeyAdapter_1","userAdapter_1","groupAdapter_1","options","_endpoints","Endpoints","getAccount","_this","apiWrapper","resultsFn","developer","data","done","AccountAdapter","map","account","admin","reverseMap","listApiKeys","_a","filter","encodeInclude","extractFilter","keys","key","ApiKeyAdapter","ListResponse","apiKeyId","addApiKey","addMap","id","updateMap","listUsers","users","user","UserAdapter","addUser","listGroups","groups","group","GroupAdapter","getGroup","groupId","listGroupUsers","listGroupApiKeys","getLastApiMetadata","asyncStyle","getLastMeta","../common/functions","../common/listResponse","./endpoints","./models/accountAdapter","./models/apiKeyAdapter","./models/groupAdapter","./models/userAdapter","3","endpointsBase_1","iam_1","responseHandler","bind","EndpointsBase","../_api/iam","../common/endpointsBase","4","accountManagementApi_1","./accountManagementApi","5","Account","init","_api","update","../../common/functions","6","account_1","policyAdapter_1","from","api","policies","policy","PolicyAdapter","displayName","display_name","aliases","company","contact","email","phoneNumber","phone_number","addressLine1","address_line1","addressLine2","address_line2","city","state","postcode","postal_code","country","status","tier","limits","createdAt","created_at","upgradedAt","upgraded_at","reason","templateId","template_id","customerNumber","customer_number","expiryWarning","expiration_warning_threshold","salesContactEmail","sales_contact","multifactorAuthenticationStatus","mfa_status","notificationEmails","notification_emails","referenceNote","reference_note","updatedAt","updated_at","contractNumber","contract_number","./account","./policyAdapter","7","ApiKey","indexOf","getOwner","ownerId","delete","8","apiKey_1","name","owner","creationTime","creation_time","lastLoginTime","last_login_time","./apiKey","9","Group","10","group_1","accountId","account_id","userCount","user_count","apiKeyCount","apikey_count","./group","11","LoginHistory","12","loginHistory_1","LoginHistoryAdapter","date","userAgent","user_agent","ipAddress","ip_address","success","./loginHistory","13","Policy","14","policy_1","allow","feature","resource","./policy","15","User","$eq","16","user_1","loginHistoryAdapter_1","logins","login_history","login","fullName","full_name","username","password","address","termsAccepted","is_gtc_accepted","marketingAccepted","is_marketing_accepted","emailVerified","email_verified","passwordChangedTime","password_changed_time","twoFactorAuthentication","is_totp_enabled","loginHistory","./loginHistoryAdapter","./user","17","process","Buffer","superagent","dotenv","version_1","DATE_REGEX","JSON_REGEX","MIME_REGEX","VERSION","Version","isPublished","version","packageName","ENV_API_KEY","ENV_HOST","config","env","host","substr","toLowerCase","normalizeParams","params","newParams","isFileParam","isArray","paramToString","param","isThisNode","ReadStream","Blob","File","Date","toJSON","toString","chooseType","types","defaultType","result","some","type","test","debugLog","title","obj","DEBUG","stdout","write","toUpperCase","console","log","currentConfig","timeout","acceptHeader","$0","$1","Authorization","set","accept","attach","field","contentType","send","reduce","val","end","error","response","complete","sdkError","message","innerError","details","text","JSON","parse","stringify","_key","../version","./functions","./sdkError","_process","buffer","fs","18","ApiMetadata","statusCode","errorMessage","requestId","object","etag","19","apiMetadata_1","req","lastMeta","./apiMetadata","20","asyncFn","callbackFn","Promise","resolve","reject","apiFn","transformFn","failOnNotFound","encodeBase64","payload","btoa","decodeBase64","atob","tlvDecoder_1","decodeTlv","isNaN","Number","camelToSnake","join","snakeToCamel","snake","match","camel","operator","defaultValue","$ne","$gte","$lte","$in","$nin","encodeFilter","nested","encode","prefix","toISOString","index","to","suffix","sub","decodeFilter","decodeName","addOperator","comparisonObject","decodeURIComponent","split","forEach","attrib","bits","name_1","nestedName","ensureArray","item","matchWithWildcard","input","matchWith","endsWith","startsWith","slice","dateToBillingMonth","getFullYear","getMonth","./tlvDecoder","21","hasMore","has_more","pageSize","totalCount","total_count","continuationMarker","continuation_marker","22","23","findIdLength","byte","idLengthMask","findValueLength","lengthTypeMask","lengthType","ONE_BYTE","TWO_BYTE","TRE_BYTE","lengthMask","decode","bytes","path","typeMask","idLength","getString","fromCharCode","combineBytes","acc","cur","idx","arr","offset","valueLength","OTR_BYTE","MULT_RESOURCE","valueBytes","hasZero","char","charCodeAt","parseInt","OBJECT_INSTAN","RESOURCE_INST","RESOURCE_VALU","24","commit","testrunnerVersion","25","26","Emitter","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","args","len","listeners","hasListeners","27","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","run","Item","array","noop","nextTick","browser","argv","versions","addListener","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","28","Agent","_defaults","_setDefaults","def","29","serialize","isObject","pairs","pushEncodedKeyValuePair","v","subkey","encodeURIComponent","parseString","str","pair","pos","parseHeader","line","lines","fields","trim","isJSON","mime","Response","xhr","responseType","responseText","statusText","_setStatusProperties","header","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","_parseBody","Request","_query","_header","err","res","original","rawResponse","new_err","_isResponseOK","custom_err","del","root","warn","RequestBase","ResponseBase","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","s","serializeObject","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","_parser","toError","msg","auth","pass","encoder","string","_auth","file","_data","_getFormData","append","_formData","FormData","_shouldRetry","_retry","_callback","_maxRetries","retries","_retries","crossDomainError","crossDomain","ca","agent","pipe","_isHost","_endCalled","_finalizeQueryString","_end","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","onprogress","upload","open","_withCredentials","withCredentials","_serializer","setRequestHeader","get","head","patch","post","put","./agent-base","./is-object","./request-base","./response-base","component-emitter","30","31","_timer","_timeout","_responseTimeout","option","deadline","retry","count","_retryCallback","ERROR_CODES","override","then","_fullfilledPromise","innerResolve","innerReject","use","ok","_okCallback","getHeader","unset","abort","base64Encoder","redirects","_maxRedirects","maxResponseSize","TypeError","_maxResponseSize","isObj","sortQuery","sort","_sort","queryArr","substring","_appendQueryString","trace","_timeoutError","errno","32","utils","ct","links","link","parseLinks","statusType","info","redirect","clientError","serverError","created","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity","./utils","33","shift","parts","cleanHeader","changesOrigin"],"mappings":"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","file":"account-management.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}(g.MbedCloudSDK || (g.MbedCloudSDK = {})).AccountManagementApi = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n/* tslint:disable:array-type */\n/* tslint:disable:no-namespace */\n/* tslint:disable:no-string-literal */\n/* tslint:disable:max-classes-per-file */\n/* tslint:disable:no-trailing-whitespace */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apiBase_1 = require(\"../common/apiBase\");\nvar sdkError_1 = require(\"../common/sdkError\");\n/**\n * AccountAdminApi\n */\nvar AccountAdminApi = /** @class */ (function (_super) {\n    __extends(AccountAdminApi, _super);\n    function AccountAdminApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add API key to a list of groups.\n     * An endpoint for adding API key to groups.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id}/groups -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param apiKey The ID of the API key to be added to the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AccountAdminApi.prototype.addApiKeyToGroups = function (apiKey, body, callback, requestOptions) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/{apiKey}/groups\".replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Upload a new trusted certificate.\n     * An endpoint for uploading new trusted certificates.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/trusted-certificates -d {\\&quot;name\\&quot;: \\&quot;myCert1\\&quot;, \\&quot;description\\&quot;: \\&quot;very important cert\\&quot;, \\&quot;certificate\\&quot;: \\&quot;certificate_data\\&quot;, \\&quot;service\\&quot;: \\&quot;lwm2m\\&quot;} -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body A trusted certificate object with attributes.\n     */\n    AccountAdminApi.prototype.addCertificate = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/trusted-certificates\",\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add members to a group.\n     * An endpoint for adding users and API keys to a group.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id} -d &#39;{\\&quot;users\\&quot;: [0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of users and API keys to be added to the group.\n     */\n    AccountAdminApi.prototype.addSubjectsToGroup = function (groupID, body, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add user to a list of groups.\n     * An endpoint for adding user to groups.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/users/{user-id}/groups -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param userId The ID of the user to be added to the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AccountAdminApi.prototype.addUserToGroups = function (userId, body, callback, requestOptions) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users/{user-id}/groups\".replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new group.\n     * An endpoint for creating a new group.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/policy-groups -d &#39;{\\&quot;name\\&quot;: \\&quot;MyGroup1\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body Details of the group to be created.\n     */\n    AccountAdminApi.prototype.createGroup = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups\",\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new user.\n     * An endpoint for creating or inviting a new user to the account. In case of invitation email address is used only, other attributes are set in the 2nd step.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/users?action&#x3D;invite -d {\\&quot;email\\&quot;: \\&quot;myemail@company.com\\&quot;} -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body A user object with attributes.\n     * @param action Action, either &#39;create&#39; or &#39;invite&#39;.\n     */\n    AccountAdminApi.prototype.createUser = function (body, action, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (action !== undefined) {\n            queryParameters[\"action\"] = action;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users\",\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Delete a group.\n     * An endpoint for deleting a group.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group to be deleted.\n     */\n    AccountAdminApi.prototype.deleteGroup = function (groupID, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Delete a user.\n     * An endpoint for deleting a user.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/users/{user-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param userId The ID of the user to be deleted.\n     */\n    AccountAdminApi.prototype.deleteUser = function (userId, callback, requestOptions) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users/{user-id}\".replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get the details of all users.\n     * An endpoint for retrieving the details of all users.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/users -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param emailEq Filter for email address\n     * @param statusEq Filter for status, for example active or reset\n     * @param statusIn An optional filter for getting users with a specified set of statuses.\n     * @param statusNin An optional filter for excluding users with a specified set of statuses.\n     */\n    AccountAdminApi.prototype.getAllUsers = function (limit, after, order, include, emailEq, statusEq, statusIn, statusNin, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (emailEq !== undefined) {\n            queryParameters[\"email__eq\"] = emailEq;\n        }\n        if (statusEq !== undefined) {\n            queryParameters[\"status__eq\"] = statusEq;\n        }\n        if (statusIn !== undefined) {\n            queryParameters[\"status__in\"] = statusIn;\n        }\n        if (statusNin !== undefined) {\n            queryParameters[\"status__nin\"] = statusNin;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get groups of the API key.\n     * An endpoint for retrieving groups of the API key.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id}/groups -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param apiKey The ID of the API key whose details are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    AccountAdminApi.prototype.getGroupsOfApikey = function (apiKey, limit, after, order, include, callback, requestOptions) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/{apiKey}/groups\".replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get groups of the user.\n     * An endpoint for retrieving groups of the user.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/users/{user-id}/groups -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param userId The ID of the user whose details are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    AccountAdminApi.prototype.getGroupsOfUser = function (userId, limit, after, order, include, callback, requestOptions) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users/{user-id}/groups\".replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Details of a user.\n     * An endpoint for retrieving the details of a user.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/users/{user-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param userId The ID of the user whose details are retrieved.\n     * @param properties Request to return account specific user property values according to the given property name.\n     */\n    AccountAdminApi.prototype.getUser = function (userId, properties, callback, requestOptions) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (properties !== undefined) {\n            queryParameters[\"properties\"] = properties;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users/{user-id}\".replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get users of a group.\n     * An endpoint for listing the users of a group with details.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id}/users -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group whose users are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param statusEq An optional filter for getting users by status.\n     * @param statusIn An optional filter for getting users with a specified set of statuses.\n     * @param statusNin An optional filter for excluding users with a specified set of statuses.\n     */\n    AccountAdminApi.prototype.getUsersOfGroup = function (groupID, limit, after, order, include, statusEq, statusIn, statusNin, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (statusEq !== undefined) {\n            queryParameters[\"status__eq\"] = statusEq;\n        }\n        if (statusIn !== undefined) {\n            queryParameters[\"status__in\"] = statusIn;\n        }\n        if (statusNin !== undefined) {\n            queryParameters[\"status__nin\"] = statusNin;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}/users\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Remove API key from groups.\n     * An endpoint for removing API key from groups.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id}/groups -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param apiKey The ID of the API key to be removed from the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AccountAdminApi.prototype.removeApiKeyFromGroups = function (apiKey, body, callback, requestOptions) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/{apiKey}/groups\".replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove user from groups.\n     * An endpoint for removing user from groups.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/users/{user-id}/groups -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param userId The ID of the user to be removed from the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AccountAdminApi.prototype.removeUserFromGroups = function (userId, body, callback, requestOptions) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users/{user-id}/groups\".replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove users from a group.\n     * An endpoint for removing users from groups.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id}/users -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group whose users are removed.\n     * @param body A list of users to be removed from the group.\n     */\n    AccountAdminApi.prototype.removeUsersFromGroup = function (groupID, body, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}/users\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update the group name.\n     * An endpoint for updating a group name.   **Example usage:** &#x60;curl -X PUT https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id} -d &#39;{\\&quot;name\\&quot;: \\&quot;TestGroup2\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group to be updated.\n     * @param body Details of the group to be created.\n     */\n    AccountAdminApi.prototype.updateGroupName = function (groupID, body, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Updates attributes of the account.\n     * An endpoint for updating the account.   **Example usage:** &#x60;curl -X PUT https://api.us-east-1.mbedcloud.com/v3/accounts/me -d &#39;{\\&quot;phone_number\\&quot;: \\&quot;12345678\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body Details of the account to be updated.\n     */\n    AccountAdminApi.prototype.updateMyAccount = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/me\",\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update user details.\n     * An endpoint for updating user details.   **Example usage:** &#x60;curl -X PUT https://api.us-east-1.mbedcloud.com/v3/users/{user-id} -d &#39;{\\&quot;username\\&quot;: \\&quot;myusername\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param userId The ID of the user whose details are updated.\n     * @param body A user object with attributes.\n     */\n    AccountAdminApi.prototype.updateUser = function (userId, body, callback, requestOptions) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/users/{user-id}\".replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    return AccountAdminApi;\n}(apiBase_1.ApiBase));\nexports.AccountAdminApi = AccountAdminApi;\n/**\n * AggregatorAccountAdminApi\n */\nvar AggregatorAccountAdminApi = /** @class */ (function (_super) {\n    __extends(AggregatorAccountAdminApi, _super);\n    function AggregatorAccountAdminApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add API key to a list of groups.\n     * An endpoint for adding API key to groups.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be added to the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AggregatorAccountAdminApi.prototype.addAccountApiKeyToGroups = function (accountID, apiKey, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}/groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Upload new trusted certificate.\n     * An endpoint for uploading new trusted certificates.\n     * @param accountID Account ID.\n     * @param body A trusted certificate object with attributes, signature is optional.\n     */\n    AggregatorAccountAdminApi.prototype.addAccountCertificate = function (accountID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/trusted-certificates\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add user to a list of groups.\n     * An endpoint for adding user to groups.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be added to the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AggregatorAccountAdminApi.prototype.addAccountUserToGroups = function (accountID, userId, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}/groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add members to a group.\n     * An endpoint for adding users and API keys to groups.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of users and API keys to be added to the group.\n     */\n    AggregatorAccountAdminApi.prototype.addSubjectsToAccountGroup = function (accountID, groupID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Check the API key.\n     * An endpoint for checking API key.\n     * @param accountID Account ID.\n     * @param apiKey The API key to be checked.\n     */\n    AggregatorAccountAdminApi.prototype.checkAccountApiKey = function (accountID, apiKey, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Create a new account.\n     * An endpoint for creating a new account.\n     * @param body Details of the account to be created.\n     * @param action Action, either &#39;create&#39; or &#39;enroll&#39;. &lt;ul&gt;&lt;li&gt;&#39;create&#39; creates the account where its admin user has ACTIVE status if admin_password was defined in the request, or RESET status if no admin_password was defined. If the user already exists, its status is not modified. &lt;/li&gt;&lt;li&gt;&#39;enroll&#39; creates the account where its admin user has ENROLLING status. If the user already exists, its status is not modified. Email to finish the enrollment or to notify the existing user about the new account is sent to the admin_email defined in the request. &lt;/li&gt;&lt;/ul&gt;\n     */\n    AggregatorAccountAdminApi.prototype.createAccount = function (body, action, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (action !== undefined) {\n            queryParameters[\"action\"] = action;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts\",\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new API key.\n     * An endpoint for creating a new API key. There is no default value for the owner ID and it must be from the same account where the new API key is created.\n     * @param accountID Account ID.\n     * @param body Details of the API key to be created.\n     */\n    AggregatorAccountAdminApi.prototype.createAccountApiKey = function (accountID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new group.\n     * An endpoint for creating a new group.\n     * @param accountID Account ID.\n     * @param body Details of the group to be created.\n     */\n    AggregatorAccountAdminApi.prototype.createAccountGroup = function (accountID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new user.\n     * An endpoint for creating or inviting a new user to the account. In case of invitation email address is used only, other attributes are set in the 2nd step.\n     * @param accountID Account ID.\n     * @param body A user object with attributes.\n     * @param action Create or invite user.\n     */\n    AggregatorAccountAdminApi.prototype.createAccountUser = function (accountID, body, action, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (action !== undefined) {\n            queryParameters[\"action\"] = action;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Delete the API key.\n     * An endpoint for deleting an API key.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be deleted.\n     */\n    AggregatorAccountAdminApi.prototype.deleteAccountApiKey = function (accountID, apiKey, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Delete trusted certificate by ID.\n     * An endpoint for deleting the trusted certificate.\n     * @param accountID Account ID.\n     * @param certId The ID of the trusted certificate to be deleted.\n     */\n    AggregatorAccountAdminApi.prototype.deleteAccountCertificate = function (accountID, certId, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"certId\" is set\n        if (certId === null || certId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'certId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/trusted-certificates/{cert-id}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"cert-id\" + \"}\", String(certId)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Delete a group.\n     * An endpoint for deleting a group.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be deleted.\n     */\n    AggregatorAccountAdminApi.prototype.deleteAccountGroup = function (accountID, groupID, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Delete a user.\n     * An endpoint for deleting a user.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be deleted.\n     */\n    AggregatorAccountAdminApi.prototype.deleteAccountUser = function (accountID, userId, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get API key details.\n     * An endpoint for retrieving API key details.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be retrieved.\n     */\n    AggregatorAccountAdminApi.prototype.getAccountApiKey = function (accountID, apiKey, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get trusted certificate by ID.\n     * An endpoint for retrieving a trusted certificate by ID.\n     * @param accountID Account ID.\n     * @param certId The ID of the trusted certificate to be retrieved.\n     */\n    AggregatorAccountAdminApi.prototype.getAccountCertificate = function (accountID, certId, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"certId\" is set\n        if (certId === null || certId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'certId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/trusted-certificates/{cert-id}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"cert-id\" + \"}\", String(certId)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get group information.\n     * An endpoint for getting general information about the group.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be retrieved.\n     */\n    AggregatorAccountAdminApi.prototype.getAccountGroupSummary = function (accountID, groupID, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get account info.\n     * Returns detailed information about the account.\n     * @param accountID The ID of the account to be fetched.\n     * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts\n     * @param properties Property name to be returned from account specific properties.\n     */\n    AggregatorAccountAdminApi.prototype.getAccountInfo = function (accountID, include, properties, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (properties !== undefined) {\n            queryParameters[\"properties\"] = properties;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Details of the user.\n     * An endpoint for retrieving details of the user.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be retrieved.\n     * @param properties Request to return account specific user property values according to the given property name.\n     */\n    AggregatorAccountAdminApi.prototype.getAccountUser = function (accountID, userId, properties, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (properties !== undefined) {\n            queryParameters[\"properties\"] = properties;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all API keys.\n     * An endpoint for retrieving the API keys in an array, optionally filtered by the owner.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param keyEq API key filter.\n     * @param ownerEq Owner name filter.\n     */\n    AggregatorAccountAdminApi.prototype.getAllAccountApiKeys = function (accountID, limit, after, order, include, keyEq, ownerEq, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (keyEq !== undefined) {\n            queryParameters[\"key__eq\"] = keyEq;\n        }\n        if (ownerEq !== undefined) {\n            queryParameters[\"owner__eq\"] = ownerEq;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all trusted certificates.\n     * An endpoint for retrieving trusted certificates in an array.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param nameEq Filter for certificate name\n     * @param serviceEq Filter for service\n     * @param expireEq Filter for expire\n     * @param deviceExecutionModeEq Filter for developer certificates\n     * @param deviceExecutionModeNeq Filter for not developer certificates\n     * @param ownerEq Owner name filter\n     * @param enrollmentModeEq Enrollment mode filter\n     * @param issuerLike Filter for issuer. Finds all matches where the filter value is a case insensitive substring of the result. Example: issuer__like&#x3D;cn&#x3D;iss matches CN&#x3D;issuer.\n     * @param subjectLike Filter for subject. Finds all matches where the filter value is a case insensitive substring of the result. Example: subject__like&#x3D;cn&#x3D;su matches CN&#x3D;subject.\n     */\n    AggregatorAccountAdminApi.prototype.getAllAccountCertificates = function (accountID, limit, after, order, include, nameEq, serviceEq, expireEq, deviceExecutionModeEq, deviceExecutionModeNeq, ownerEq, enrollmentModeEq, issuerLike, subjectLike, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (nameEq !== undefined) {\n            queryParameters[\"name__eq\"] = nameEq;\n        }\n        if (serviceEq !== undefined) {\n            queryParameters[\"service__eq\"] = serviceEq;\n        }\n        if (expireEq !== undefined) {\n            queryParameters[\"expire__eq\"] = expireEq;\n        }\n        if (deviceExecutionModeEq !== undefined) {\n            queryParameters[\"device_execution_mode__eq\"] = deviceExecutionModeEq;\n        }\n        if (deviceExecutionModeNeq !== undefined) {\n            queryParameters[\"device_execution_mode__neq\"] = deviceExecutionModeNeq;\n        }\n        if (ownerEq !== undefined) {\n            queryParameters[\"owner__eq\"] = ownerEq;\n        }\n        if (enrollmentModeEq !== undefined) {\n            queryParameters[\"enrollment_mode__eq\"] = enrollmentModeEq;\n        }\n        if (issuerLike !== undefined) {\n            queryParameters[\"issuer__like\"] = issuerLike;\n        }\n        if (subjectLike !== undefined) {\n            queryParameters[\"subject__like\"] = subjectLike;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/trusted-certificates\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all group information.\n     * An endpoint for retrieving all group information.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param nameEq Filter for group name\n     */\n    AggregatorAccountAdminApi.prototype.getAllAccountGroups = function (accountID, limit, after, order, include, nameEq, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (nameEq !== undefined) {\n            queryParameters[\"name__eq\"] = nameEq;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all user details.\n     * An endpoint for retrieving details of all users.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param emailEq Filter for email address\n     * @param statusEq Filter for status\n     * @param statusIn An optional filter for getting users with a specified set of statuses.\n     * @param statusNin An optional filter for excluding users with a specified set of statuses.\n     */\n    AggregatorAccountAdminApi.prototype.getAllAccountUsers = function (accountID, limit, after, order, include, emailEq, statusEq, statusIn, statusNin, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (emailEq !== undefined) {\n            queryParameters[\"email__eq\"] = emailEq;\n        }\n        if (statusEq !== undefined) {\n            queryParameters[\"status__eq\"] = statusEq;\n        }\n        if (statusIn !== undefined) {\n            queryParameters[\"status__in\"] = statusIn;\n        }\n        if (statusNin !== undefined) {\n            queryParameters[\"status__nin\"] = statusNin;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all accounts.\n     * Returns an array of account objects, optionally filtered by status and tier level.\n     * @param statusEq An optional filter for account status, ENROLLING, ACTIVE, RESTRICTED or SUSPENDED.\n     * @param statusIn An optional filter for getting accounts with a specified set of statuses.\n     * @param statusNin An optional filter for excluding accounts with a specified set of statuses.\n     * @param tierEq An optional filter for tier level, must be 0, 1, 2, 98, 99 or omitted.\n     * @param parentEq An optional filter for parent account ID.\n     * @param endMarketEq An optional filter for account end market.\n     * @param countryLike An optional filter for account country. Finds all matches where the filter value is a case insensitive substring of the result. Example: country__like&#x3D;LAND matches Ireland.\n     * @param limit The number of results to return (2-1000), default is 1000.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC. Default value is ASC\n     * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts\n     * @param format Format information for the response to the query, supported: format&#x3D;breakdown.\n     * @param properties Property name to be returned from account specific properties.\n     */\n    AggregatorAccountAdminApi.prototype.getAllAccounts = function (statusEq, statusIn, statusNin, tierEq, parentEq, endMarketEq, countryLike, limit, after, order, include, format, properties, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (statusEq !== undefined) {\n            queryParameters[\"status__eq\"] = statusEq;\n        }\n        if (statusIn !== undefined) {\n            queryParameters[\"status__in\"] = statusIn;\n        }\n        if (statusNin !== undefined) {\n            queryParameters[\"status__nin\"] = statusNin;\n        }\n        if (tierEq !== undefined) {\n            queryParameters[\"tier__eq\"] = tierEq;\n        }\n        if (parentEq !== undefined) {\n            queryParameters[\"parent__eq\"] = parentEq;\n        }\n        if (endMarketEq !== undefined) {\n            queryParameters[\"end_market__eq\"] = endMarketEq;\n        }\n        if (countryLike !== undefined) {\n            queryParameters[\"country__like\"] = countryLike;\n        }\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (format !== undefined) {\n            queryParameters[\"format\"] = format;\n        }\n        if (properties !== undefined) {\n            queryParameters[\"properties\"] = properties;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get API keys of a group.\n     * An endpoint for listing the API keys of the group with details.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group whose API keys are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    AggregatorAccountAdminApi.prototype.getApiKeysOfAccountGroup = function (accountID, groupID, limit, after, order, include, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}/api-keys\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get groups of the API key.\n     * An endpoint for retrieving groups of the API key.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key whose details are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    AggregatorAccountAdminApi.prototype.getGroupsOfAccountApikey = function (accountID, apiKey, limit, after, order, include, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}/groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get groups of the user.\n     * An endpoint for retrieving groups of the user.\n     * @param accountID Account ID.\n     * @param userId The ID of the user whose details are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    AggregatorAccountAdminApi.prototype.getGroupsOfAccountUser = function (accountID, userId, limit, after, order, include, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}/groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get users of a group.\n     * An endpoint for listing users of the group with details.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group whose users are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param statusEq An optional filter for getting users by status.\n     * @param statusIn An optional filter for getting users with a specified set of statuses.\n     * @param statusNin An optional filter for excluding users with a specified set of statuses.\n     */\n    AggregatorAccountAdminApi.prototype.getUsersOfAccountGroup = function (accountID, groupID, limit, after, order, include, statusEq, statusIn, statusNin, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (statusEq !== undefined) {\n            queryParameters[\"status__eq\"] = statusEq;\n        }\n        if (statusIn !== undefined) {\n            queryParameters[\"status__in\"] = statusIn;\n        }\n        if (statusNin !== undefined) {\n            queryParameters[\"status__nin\"] = statusNin;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}/users\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Remove API key from groups.\n     * An endpoint for removing API key from groups.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be removed from the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AggregatorAccountAdminApi.prototype.removeAccountApiKeyFromGroups = function (accountID, apiKey, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}/groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove user from groups.\n     * An endpoint for removing user from groups.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be removed from the group.\n     * @param body A list of IDs of the groups to be updated.\n     */\n    AggregatorAccountAdminApi.prototype.removeAccountUserFromGroups = function (accountID, userId, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}/groups\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove API keys from a group.\n     * An endpoint for removing API keys from groups.\n     * @param accountID Account ID.\n     * @param groupID A list of API keys to be removed from the group.\n     * @param body\n     */\n    AggregatorAccountAdminApi.prototype.removeApiKeysFromAccountGroup = function (accountID, groupID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}/api-keys\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove users from a group.\n     * An endpoint for removing users from groups.\n     * @param accountID Account ID.\n     * @param groupID\n     * @param body\n     */\n    AggregatorAccountAdminApi.prototype.removeUsersFromAccountGroup = function (accountID, groupID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}/users\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Reset the secret key.\n     * An endpoint for resetting the secret key of the API key.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be reset.\n     */\n    AggregatorAccountAdminApi.prototype.resetAccountApiKeySecret = function (accountID, apiKey, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}/reset-secret\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Update attributes of an existing account.\n     * An endpoint for updating an account.\n     * @param accountID The ID of the account to be updated.\n     * @param body Details of the account to be updated.\n     */\n    AggregatorAccountAdminApi.prototype.updateAccount = function (accountID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update API key details.\n     * An endpoint for updating API key details.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be updated.\n     * @param body New API key attributes to be stored.\n     */\n    AggregatorAccountAdminApi.prototype.updateAccountApiKey = function (accountID, apiKey, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/api-keys/{apiKey}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update trusted certificate.\n     * An endpoint for updating existing trusted certificates.\n     * @param accountID Account ID.\n     * @param certId The ID of the trusted certificate to be updated.\n     * @param body A trusted certificate object with attributes.\n     */\n    AggregatorAccountAdminApi.prototype.updateAccountCertificate = function (accountID, certId, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"certId\" is set\n        if (certId === null || certId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'certId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/trusted-certificates/{cert-id}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"cert-id\" + \"}\", String(certId)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update the group name.\n     * An endpoint for updating a group name.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be updated.\n     * @param body Details of the group to be created.\n     */\n    AggregatorAccountAdminApi.prototype.updateAccountGroupName = function (accountID, groupID, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/policy-groups/{groupID}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update user details.\n     * An endpoint for updating user details.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be updated.\n     * @param body A user object with attributes.\n     */\n    AggregatorAccountAdminApi.prototype.updateAccountUser = function (accountID, userId, body, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Validate the user email.\n     * An endpoint for validating the user email.\n     * @param accountID Account ID.\n     * @param userId The ID of the user whose email is validated.\n     */\n    AggregatorAccountAdminApi.prototype.validateAccountUserEmail = function (accountID, userId, callback, requestOptions) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'accountID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'userId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/{accountID}/users/{user-id}/validate-email\".replace(\"{\" + \"accountID\" + \"}\", String(accountID)).replace(\"{\" + \"user-id\" + \"}\", String(userId)),\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    return AggregatorAccountAdminApi;\n}(apiBase_1.ApiBase));\nexports.AggregatorAccountAdminApi = AggregatorAccountAdminApi;\n/**\n * DeveloperApi\n */\nvar DeveloperApi = /** @class */ (function (_super) {\n    __extends(DeveloperApi, _super);\n    function DeveloperApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add API key to a list of groups.\n     * An endpoint for adding API key to groups.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body A list of IDs of the groups to be updated.\n     */\n    DeveloperApi.prototype.addMyApiKeyToGroups = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/me/groups\",\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new API key.\n     * An endpoint for creating a new API key.   **Example usage:** &#x60;curl -X POST https://api.us-east-1.mbedcloud.com/v3/api-keys -d &#39;{\\&quot;name\\&quot;: \\&quot;MyKey1\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body The details of the API key to be created.\n     */\n    DeveloperApi.prototype.createApiKey = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys\",\n            method: \"POST\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Delete API key.\n     * An endpoint for deleting the API key.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param apiKey The ID of the API key to be deleted.\n     */\n    DeveloperApi.prototype.deleteApiKey = function (apiKey, callback, requestOptions) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/{apiKey}\".replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Delete a trusted certificate by ID.\n     * An endpoint for deleting a trusted certificate.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param certId The ID of the trusted certificate to be deleted.\n     */\n    DeveloperApi.prototype.deleteCertificate = function (certId, callback, requestOptions) {\n        // verify required parameter \"certId\" is set\n        if (certId === null || certId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'certId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/trusted-certificates/{cert-id}\".replace(\"{\" + \"cert-id\" + \"}\", String(certId)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all API keys\n     * An endpoint for retrieving API keys in an array, optionally filtered by the owner.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/api-keys -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param keyEq API key filter.\n     * @param ownerEq Owner name filter.\n     */\n    DeveloperApi.prototype.getAllApiKeys = function (limit, after, order, include, keyEq, ownerEq, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (keyEq !== undefined) {\n            queryParameters[\"key__eq\"] = keyEq;\n        }\n        if (ownerEq !== undefined) {\n            queryParameters[\"owner__eq\"] = ownerEq;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all trusted certificates.\n     * An endpoint for retrieving trusted certificates in an array.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/trusted-certificates -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param nameEq Filter for certificate name\n     * @param serviceEq Service filter, either lwm2m or bootstrap\n     * @param expireEq Expire filter in days\n     * @param deviceExecutionModeEq Device execution mode, as 1 for developer certificates or as another natural integer value\n     * @param deviceExecutionModeNeq Device execution mode not equals filter\n     * @param ownerEq Owner name filter\n     * @param enrollmentModeEq Enrollment mode filter\n     * @param issuerLike Issuer filter. Finds all matches where the filter value is a case insensitive substring of the result. Example: issuer__like&#x3D;cn&#x3D;iss matches CN&#x3D;issuer.\n     * @param subjectLike Subject filter. Finds all matches where the filter value is a case insensitive substring of the result. Example: subject__like&#x3D;cn&#x3D;su matches CN&#x3D;subject.\n     */\n    DeveloperApi.prototype.getAllCertificates = function (limit, after, order, include, nameEq, serviceEq, expireEq, deviceExecutionModeEq, deviceExecutionModeNeq, ownerEq, enrollmentModeEq, issuerLike, subjectLike, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (nameEq !== undefined) {\n            queryParameters[\"name__eq\"] = nameEq;\n        }\n        if (serviceEq !== undefined) {\n            queryParameters[\"service__eq\"] = serviceEq;\n        }\n        if (expireEq !== undefined) {\n            queryParameters[\"expire__eq\"] = expireEq;\n        }\n        if (deviceExecutionModeEq !== undefined) {\n            queryParameters[\"device_execution_mode__eq\"] = deviceExecutionModeEq;\n        }\n        if (deviceExecutionModeNeq !== undefined) {\n            queryParameters[\"device_execution_mode__neq\"] = deviceExecutionModeNeq;\n        }\n        if (ownerEq !== undefined) {\n            queryParameters[\"owner__eq\"] = ownerEq;\n        }\n        if (enrollmentModeEq !== undefined) {\n            queryParameters[\"enrollment_mode__eq\"] = enrollmentModeEq;\n        }\n        if (issuerLike !== undefined) {\n            queryParameters[\"issuer__like\"] = issuerLike;\n        }\n        if (subjectLike !== undefined) {\n            queryParameters[\"subject__like\"] = subjectLike;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/trusted-certificates\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get all group information.\n     * An endpoint for retrieving all group information.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/policy-groups -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param nameEq Filter for group name\n     */\n    DeveloperApi.prototype.getAllGroups = function (limit, after, order, include, nameEq, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (nameEq !== undefined) {\n            queryParameters[\"name__eq\"] = nameEq;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get API key details.\n     * An endpoint for retrieving API key details.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param apiKey The ID of the API key to be retrieved.\n     */\n    DeveloperApi.prototype.getApiKey = function (apiKey, callback, requestOptions) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/{apiKey}\".replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get the API keys of a group.\n     * An endpoint for listing the API keys of the group with details.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id}/api-keys -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group whose API keys are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    DeveloperApi.prototype.getApiKeysOfGroup = function (groupID, limit, after, order, include, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}/api-keys\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get trusted certificate by ID.\n     * An endpoint for retrieving a trusted certificate by ID.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param certId The ID of the trusted certificate to be retrieved.\n     */\n    DeveloperApi.prototype.getCertificate = function (certId, callback, requestOptions) {\n        // verify required parameter \"certId\" is set\n        if (certId === null || certId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'certId' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/trusted-certificates/{cert-id}\".replace(\"{\" + \"cert-id\" + \"}\", String(certId)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get group information.\n     * An endpoint for getting general information about the group.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id} -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group to be retrieved.\n     */\n    DeveloperApi.prototype.getGroupSummary = function (groupID, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get groups of the API key.\n     * An endpoint for retrieving groups of the API key.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records based on creation time, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    DeveloperApi.prototype.getGroupsOfMyApiKey = function (limit, after, order, include, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters[\"limit\"] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters[\"after\"] = after;\n        }\n        if (order !== undefined) {\n            queryParameters[\"order\"] = order;\n        }\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/me/groups\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get account info.\n     * Returns detailed information about the account.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/accounts/me?include&#x3D;policies -H &#39;Authorization: Bearer API_KEY&#39;&#x60;.\n     * @param include Comma separated additional data to return. Currently supported: limits, policies, sub_accounts.\n     * @param properties Property name to be returned from account specific properties.\n     */\n    DeveloperApi.prototype.getMyAccountInfo = function (include, properties, callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (include !== undefined) {\n            queryParameters[\"include\"] = include;\n        }\n        if (properties !== undefined) {\n            queryParameters[\"properties\"] = properties;\n        }\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/accounts/me\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Get API key details.\n     * An endpoint for retrieving API key details.   **Example usage:** &#x60;curl https://api.us-east-1.mbedcloud.com/v3/api-keys/me -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     */\n    DeveloperApi.prototype.getMyApiKey = function (callback, requestOptions) {\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/me\",\n            method: \"GET\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n        }, callback);\n    };\n    /**\n     * Remove API keys from a group.\n     * An endpoint for removing API keys from groups.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/policy-groups/{group-id}/api-keys -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param groupID The ID of the group whose API keys are removed.\n     * @param body A list of API keys to be removed from the group.\n     */\n    DeveloperApi.prototype.removeApiKeysFromGroup = function (groupID, body, callback, requestOptions) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'groupID' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/policy-groups/{groupID}/api-keys\".replace(\"{\" + \"groupID\" + \"}\", String(groupID)),\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove API key from groups.\n     * An endpoint for removing API key from groups.   **Example usage:** &#x60;curl -X DELETE https://api.us-east-1.mbedcloud.com/v3/api-keys/me/groups -d &#39;[0162056a9a1586f30242590700000000,0117056a9a1586f30242590700000000]&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body A list of IDs of the groups to be updated.\n     */\n    DeveloperApi.prototype.removeMyApiKeyFromGroups = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/me/groups\",\n            method: \"DELETE\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update API key details.\n     * An endpoint for updating API key details.   **Example usage:** &#x60;curl -X PUT https://api.us-east-1.mbedcloud.com/v3/api-keys/{apikey-id} -d &#39;{\\&quot;name\\&quot;: \\&quot;TestApiKey25\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param apiKey The ID of the API key to be updated.\n     * @param body New API key attributes to be stored.\n     */\n    DeveloperApi.prototype.updateApiKey = function (apiKey, body, callback, requestOptions) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'apiKey' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/{apiKey}\".replace(\"{\" + \"apiKey\" + \"}\", String(apiKey)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update trusted certificate.\n     * An endpoint for updating existing trusted certificates.   **Example usage:** &#x60;curl -X PUT https://api.us-east-1.mbedcloud.com/v3/trusted-certificates/{cert-id} -d {\\&quot;description\\&quot;: \\&quot;very important cert\\&quot;} -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param certId The ID of the trusted certificate to be updated.\n     * @param body A trusted certificate object with attributes.\n     */\n    DeveloperApi.prototype.updateCertificate = function (certId, body, callback, requestOptions) {\n        // verify required parameter \"certId\" is set\n        if (certId === null || certId === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'certId' missing.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [\n            \"application/json\",\n        ];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/trusted-certificates/{cert-id}\".replace(\"{\" + \"cert-id\" + \"}\", String(certId)),\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update API key details.\n     * An endpoint for updating API key details.   **Example usage:** &#x60;curl -X PUT https://api.us-east-1.mbedcloud.com/v3/api-keys/me -d &#39;{\\&quot;name\\&quot;: \\&quot;TestApiKey25\\&quot;}&#39; -H &#39;content-type: application/json&#39; -H &#39;Authorization: Bearer API_KEY&#39;&#x60;\n     * @param body New API key attributes to be stored.\n     */\n    DeveloperApi.prototype.updateMyApiKey = function (body, callback, requestOptions) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new sdkError_1.SDKError(\"Required parameter 'body' missing.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        // tslint:disable-next-line:prefer-const\n        var useFormData = false;\n        var formParams = {};\n        // Determine the Content-Type header\n        var contentTypes = [];\n        // Determine the Accept header\n        var acceptTypes = [\n            \"application/json\",\n        ];\n        return this.request({\n            url: \"/v3/api-keys/me\",\n            method: \"PUT\",\n            headers: headerParams,\n            query: queryParameters,\n            formParams: formParams,\n            useFormData: useFormData,\n            contentTypes: contentTypes,\n            acceptTypes: acceptTypes,\n            requestOptions: requestOptions,\n            body: body,\n        }, callback);\n    };\n    return DeveloperApi;\n}(apiBase_1.ApiBase));\nexports.DeveloperApi = DeveloperApi;\n\n},{\"../common/apiBase\":17,\"../common/sdkError\":22}],2:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar functions_1 = require(\"../common/functions\");\nvar listResponse_1 = require(\"../common/listResponse\");\nvar endpoints_1 = require(\"./endpoints\");\nvar accountAdapter_1 = require(\"./models/accountAdapter\");\nvar apiKeyAdapter_1 = require(\"./models/apiKeyAdapter\");\nvar userAdapter_1 = require(\"./models/userAdapter\");\nvar groupAdapter_1 = require(\"./models/groupAdapter\");\n/**\n * ## Account Management API\n *\n * The API can be initalized with a .env file in the wroking directory with the following values\n *\n * MBED_CLOUD_SDK_API_KEY=<Mbed Cloud Api Key>\n *\n * and optionally\n *\n * MBED_CLOUD_SDK_HOST=<your host> (defaults to https://api.us-east-1.mbedcloud.com)\n *\n * OR\n *\n * This API is initialized with [ConnectionOptions](../interfaces/connectionoptions.html).\n *\n * To create an instance of this API in [Node.js](https://nodejs.org):\n *\n * ```JavaScript\n * var MbedCloudSDK = require(\"mbed-cloud-sdk\");\n *\n * var accounts = new MbedCloudSDK.AccountManagementApi();\n * ```\n *\n * To create an instance of this API in the browser:\n *\n * ```html\n * <script src=\"<mbed-cloud-sdk>/bundles/account-management.min.js\"></script>\n *\n * <script>\n *     var accounts = new MbedCloudSDK.AccountManagementApi({\n *         apiKey: \"<Mbed Cloud API Key>\"\n *     });\n * </script>\n * ```\n */\nvar AccountManagementApi = /** @class */ (function () {\n    /**\n     * @param options connection options\n     */\n    function AccountManagementApi(options) {\n        this._endpoints = new endpoints_1.Endpoints(options);\n    }\n    AccountManagementApi.prototype.getAccount = function (callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.developer.getMyAccountInfo(\"limits, policies\", \"\", resultsFn);\n        }, function (data, done) {\n            done(null, accountAdapter_1.AccountAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.updateAccount = function (account, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.admin.updateMyAccount(accountAdapter_1.AccountAdapter.reverseMap(account), resultsFn);\n        }, function (data, done) {\n            done(null, accountAdapter_1.AccountAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.listApiKeys = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.apiWrapper(function (resultsFn) {\n            var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, filter = _a.filter;\n            _this._endpoints.developer.getAllApiKeys(limit, after, order, functions_1.encodeInclude(include), functions_1.extractFilter(filter, \"apiKey\"), functions_1.extractFilter(filter, \"ownerId\"), resultsFn);\n        }, function (data, done) {\n            var keys;\n            if (data && data.data && data.data.length) {\n                keys = data.data.map(function (key) {\n                    return apiKeyAdapter_1.ApiKeyAdapter.map(key, _this);\n                });\n            }\n            done(null, new listResponse_1.ListResponse(data, keys));\n        }, callback);\n    };\n    AccountManagementApi.prototype.getApiKey = function (apiKeyId, callback) {\n        var _this = this;\n        if (typeof apiKeyId === \"function\") {\n            callback = apiKeyId;\n            apiKeyId = null;\n        }\n        return functions_1.apiWrapper(function (resultsFn) {\n            if (apiKeyId) {\n                _this._endpoints.developer.getApiKey(apiKeyId, resultsFn);\n            }\n            else {\n                _this._endpoints.developer.getMyApiKey(resultsFn);\n            }\n        }, function (data, done) {\n            done(null, apiKeyAdapter_1.ApiKeyAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.addApiKey = function (apiKey, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.developer.createApiKey(apiKeyAdapter_1.ApiKeyAdapter.addMap(apiKey), resultsFn);\n        }, function (data, done) {\n            done(null, apiKeyAdapter_1.ApiKeyAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.updateApiKey = function (apiKey, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.developer.updateApiKey(apiKey.id, apiKeyAdapter_1.ApiKeyAdapter.updateMap(apiKey), resultsFn);\n        }, function (data, done) {\n            done(null, apiKeyAdapter_1.ApiKeyAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.deleteApiKey = function (apiKeyId, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.developer.deleteApiKey(apiKeyId, resultsFn);\n        }, function (data, done) {\n            done(null, data);\n        }, callback);\n    };\n    AccountManagementApi.prototype.listUsers = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.apiWrapper(function (resultsFn) {\n            var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, filter = _a.filter;\n            _this._endpoints.admin.getAllUsers(limit, after, order, functions_1.encodeInclude(include), functions_1.extractFilter(filter, \"email\"), functions_1.extractFilter(filter, \"status\"), functions_1.extractFilter(filter, \"status\", \"$in\"), functions_1.extractFilter(filter, \"status\", \"$nin\"), resultsFn);\n        }, function (data, done) {\n            var users;\n            if (data.data && data.data.length) {\n                users = data.data.map(function (user) {\n                    return userAdapter_1.UserAdapter.map(user, _this);\n                });\n            }\n            done(null, new listResponse_1.ListResponse(data, users));\n        }, callback);\n    };\n    AccountManagementApi.prototype.getUser = function (userId, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.admin.getUser(userId, \"\", resultsFn);\n        }, function (data, done) {\n            done(null, userAdapter_1.UserAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.addUser = function (user, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.admin.createUser(userAdapter_1.UserAdapter.addMap(user), \"create\", resultsFn);\n        }, function (data, done) {\n            done(null, userAdapter_1.UserAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.updateUser = function (user, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.admin.updateUser(user.id, userAdapter_1.UserAdapter.updateMap(user), resultsFn);\n        }, function (data, done) {\n            done(null, userAdapter_1.UserAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.deleteUser = function (userId, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.admin.deleteUser(userId, resultsFn);\n        }, function (data, done) {\n            done(null, data);\n        }, callback);\n    };\n    AccountManagementApi.prototype.listGroups = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.apiWrapper(function (resultsFn) {\n            var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, filter = _a.filter;\n            _this._endpoints.developer.getAllGroups(limit, after, order, functions_1.encodeInclude(include), functions_1.extractFilter(filter, \"name\"), resultsFn);\n        }, function (data, done) {\n            var groups;\n            if (data.data && data.data.length) {\n                groups = data.data.map(function (group) {\n                    return groupAdapter_1.GroupAdapter.map(group, _this);\n                });\n            }\n            done(null, new listResponse_1.ListResponse(data, groups));\n        }, callback);\n    };\n    AccountManagementApi.prototype.getGroup = function (groupId, callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._endpoints.developer.getGroupSummary(groupId, resultsFn);\n        }, function (data, done) {\n            done(null, groupAdapter_1.GroupAdapter.map(data, _this));\n        }, callback);\n    };\n    AccountManagementApi.prototype.listGroupUsers = function (groupId, options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.apiWrapper(function (resultsFn) {\n            var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, filter = _a.filter;\n            _this._endpoints.admin.getUsersOfGroup(groupId, limit, after, order, functions_1.encodeInclude(include), functions_1.extractFilter(filter, \"status\"), functions_1.extractFilter(filter, \"status\", \"$in\"), functions_1.extractFilter(filter, \"status\", \"$nin\"), resultsFn);\n        }, function (data, done) {\n            var users;\n            if (data.data && data.data.length) {\n                users = data.data.map(function (user) {\n                    return userAdapter_1.UserAdapter.map(user, _this);\n                });\n            }\n            done(null, new listResponse_1.ListResponse(data, users));\n        }, callback);\n    };\n    AccountManagementApi.prototype.listGroupApiKeys = function (groupId, options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.apiWrapper(function (resultsFn) {\n            var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include;\n            _this._endpoints.developer.getApiKeysOfGroup(groupId, limit, after, order, functions_1.encodeInclude(include), resultsFn);\n        }, function (data, done) {\n            var keys;\n            if (data.data && data.data.length) {\n                keys = data.data.map(function (key) {\n                    return apiKeyAdapter_1.ApiKeyAdapter.map(key, _this);\n                });\n            }\n            done(null, new listResponse_1.ListResponse(data, keys));\n        }, callback);\n    };\n    AccountManagementApi.prototype.getLastApiMetadata = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            done(null, _this._endpoints.getLastMeta());\n        }, callback);\n    };\n    return AccountManagementApi;\n}());\nexports.AccountManagementApi = AccountManagementApi;\n\n},{\"../common/functions\":20,\"../common/listResponse\":21,\"./endpoints\":3,\"./models/accountAdapter\":6,\"./models/apiKeyAdapter\":8,\"./models/groupAdapter\":10,\"./models/userAdapter\":16}],3:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar endpointsBase_1 = require(\"../common/endpointsBase\");\nvar iam_1 = require(\"../_api/iam\");\nvar Endpoints = /** @class */ (function (_super) {\n    __extends(Endpoints, _super);\n    function Endpoints(options) {\n        var _this = _super.call(this) || this;\n        _this.developer = new iam_1.DeveloperApi(options, _this.responseHandler.bind(_this));\n        _this.admin = new iam_1.AccountAdminApi(options, _this.responseHandler.bind(_this));\n        return _this;\n    }\n    return Endpoints;\n}(endpointsBase_1.EndpointsBase));\nexports.Endpoints = Endpoints;\n\n},{\"../_api/iam\":1,\"../common/endpointsBase\":19}],4:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar accountManagementApi_1 = require(\"./accountManagementApi\");\nmodule.exports = accountManagementApi_1.AccountManagementApi;\n\n},{\"./accountManagementApi\":2}],5:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar functions_1 = require(\"../../common/functions\");\n/**\n * Account\n */\nvar Account = /** @class */ (function () {\n    function Account(init, _api) {\n        this._api = _api;\n        for (var key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n    Account.prototype.update = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateAccount(_this, done);\n        }, callback);\n    };\n    return Account;\n}());\nexports.Account = Account;\n\n},{\"../../common/functions\":20}],6:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar account_1 = require(\"./account\");\nvar policyAdapter_1 = require(\"./policyAdapter\");\n/**\n * Account Adapter\n */\nvar AccountAdapter = /** @class */ (function () {\n    function AccountAdapter() {\n    }\n    AccountAdapter.map = function (from, api) {\n        var policies = [];\n        if (from.policies) {\n            policies = from.policies.map(function (policy) {\n                return policyAdapter_1.PolicyAdapter.map(policy);\n            });\n        }\n        return new account_1.Account({\n            // parentId               : from.parent_id,\n            // subAccounts            : from.sub_accounts,\n            displayName: from.display_name,\n            aliases: from.aliases,\n            company: from.company,\n            contact: from.contact,\n            email: from.email,\n            phoneNumber: from.phone_number,\n            addressLine1: from.address_line1,\n            addressLine2: from.address_line2,\n            city: from.city,\n            state: from.state,\n            postcode: from.postal_code,\n            country: from.country,\n            id: from.id,\n            status: from.status,\n            tier: from.tier,\n            limits: from.limits,\n            policies: policies,\n            createdAt: from.created_at,\n            upgradedAt: from.upgraded_at,\n            reason: from.reason,\n            templateId: from.template_id,\n            customerNumber: from.customer_number,\n            expiryWarning: from.expiration_warning_threshold,\n            salesContactEmail: from.sales_contact,\n            multifactorAuthenticationStatus: from.mfa_status,\n            notificationEmails: from.notification_emails,\n            referenceNote: from.reference_note,\n            updatedAt: from.updated_at,\n            contractNumber: from.contract_number,\n        }, api);\n    };\n    AccountAdapter.reverseMap = function (from) {\n        return {\n            display_name: from.displayName,\n            aliases: from.aliases,\n            company: from.company,\n            contact: from.contact,\n            email: from.email,\n            phone_number: from.phoneNumber,\n            address_line1: from.addressLine1,\n            address_line2: from.addressLine2,\n            city: from.city,\n            state: from.state,\n            postal_code: from.postcode,\n            country: from.country,\n            mfa_status: from.multifactorAuthenticationStatus,\n            notification_emails: from.notificationEmails,\n            expiration_warning_threshold: from.expiryWarning,\n        };\n    };\n    return AccountAdapter;\n}());\nexports.AccountAdapter = AccountAdapter;\n\n},{\"./account\":5,\"./policyAdapter\":14}],7:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar functions_1 = require(\"../../common/functions\");\n/**\n * API Key\n */\nvar ApiKey = /** @class */ (function () {\n    function ApiKey(init, _api) {\n        this._api = _api;\n        for (var key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n    ApiKey.prototype.listGroups = function (callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._api.listGroups(null, resultsFn);\n        }, function (data, done) {\n            var groups = [];\n            if (data.data && data.data.length) {\n                groups = data.data.filter(function (group) {\n                    return _this.groups.indexOf(group.id) > -1;\n                });\n            }\n            done(null, groups);\n        }, callback);\n    };\n    ApiKey.prototype.getOwner = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            if (!_this.ownerId) {\n                return done(null, null);\n            }\n            _this._api.getUser(_this.ownerId, done);\n        }, callback);\n    };\n    ApiKey.prototype.update = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateApiKey(_this, done);\n        }, callback);\n    };\n    ApiKey.prototype.delete = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.deleteApiKey(_this.id, done);\n        }, callback);\n    };\n    return ApiKey;\n}());\nexports.ApiKey = ApiKey;\n\n},{\"../../common/functions\":20}],8:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apiKey_1 = require(\"./apiKey\");\n/**\n * API Key Adapter\n */\nvar ApiKeyAdapter = /** @class */ (function () {\n    function ApiKeyAdapter() {\n    }\n    ApiKeyAdapter.map = function (from, api) {\n        return new apiKey_1.ApiKey({\n            name: from.name,\n            ownerId: from.owner,\n            groups: from.groups,\n            id: from.id,\n            key: from.key,\n            status: from.status,\n            createdAt: from.created_at,\n            creationTime: from.creation_time,\n            lastLoginTime: from.last_login_time,\n        }, api);\n    };\n    ApiKeyAdapter.addMap = function (from) {\n        return {\n            name: from.name,\n            status: from.status,\n            owner: from.ownerId,\n            groups: from.groups,\n        };\n    };\n    ApiKeyAdapter.updateMap = function (from) {\n        return {\n            name: from.name,\n            status: from.status,\n            owner: from.ownerId,\n        };\n    };\n    return ApiKeyAdapter;\n}());\nexports.ApiKeyAdapter = ApiKeyAdapter;\n\n},{\"./apiKey\":7}],9:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar functions_1 = require(\"../../common/functions\");\n/**\n * Group\n */\nvar Group = /** @class */ (function () {\n    function Group(init, _api) {\n        this._api = _api;\n        for (var key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n    Group.prototype.listUsers = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.asyncStyle(function (done) {\n            _this._api.listGroupUsers(_this.id, options, done);\n        }, callback);\n    };\n    Group.prototype.listApiKeys = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.asyncStyle(function (done) {\n            _this._api.listGroupApiKeys(_this.id, options, done);\n        }, callback);\n    };\n    return Group;\n}());\nexports.Group = Group;\n\n},{\"../../common/functions\":20}],10:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar group_1 = require(\"./group\");\n/**\n * Group Adapter\n */\nvar GroupAdapter = /** @class */ (function () {\n    function GroupAdapter() {\n    }\n    GroupAdapter.map = function (from, api) {\n        return new group_1.Group({\n            id: from.id,\n            accountId: from.account_id,\n            name: from.name,\n            userCount: from.user_count,\n            apiKeyCount: from.apikey_count,\n            createdAt: from.created_at,\n        }, api);\n    };\n    return GroupAdapter;\n}());\nexports.GroupAdapter = GroupAdapter;\n\n},{\"./group\":9}],11:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Login History\n */\nvar LoginHistory = /** @class */ (function () {\n    function LoginHistory(init) {\n        for (var key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n    return LoginHistory;\n}());\nexports.LoginHistory = LoginHistory;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar loginHistory_1 = require(\"./loginHistory\");\n/**\n * Login History Adapter\n */\nvar LoginHistoryAdapter = /** @class */ (function () {\n    function LoginHistoryAdapter() {\n    }\n    LoginHistoryAdapter.map = function (from) {\n        return new loginHistory_1.LoginHistory({\n            date: from.date,\n            userAgent: from.user_agent,\n            ipAddress: from.ip_address,\n            success: from.success,\n        });\n    };\n    return LoginHistoryAdapter;\n}());\nexports.LoginHistoryAdapter = LoginHistoryAdapter;\n\n},{\"./loginHistory\":11}],13:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Policy\n * This object represents a feature policy. Either the feature or the resource must be specified.\n */\nvar Policy = /** @class */ (function () {\n    function Policy(init) {\n        for (var key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n    return Policy;\n}());\nexports.Policy = Policy;\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar policy_1 = require(\"./policy\");\n/**\n * Policy Adapter\n */\nvar PolicyAdapter = /** @class */ (function () {\n    function PolicyAdapter() {\n    }\n    PolicyAdapter.map = function (from) {\n        return new policy_1.Policy({\n            action: from.action,\n            allow: from.allow,\n            feature: from.feature,\n            resource: from.resource,\n        });\n    };\n    return PolicyAdapter;\n}());\nexports.PolicyAdapter = PolicyAdapter;\n\n},{\"./policy\":13}],15:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar functions_1 = require(\"../../common/functions\");\n/**\n * User\n */\nvar User = /** @class */ (function () {\n    function User(init, _api) {\n        this._api = _api;\n        for (var key in init) {\n            if (init.hasOwnProperty(key)) {\n                this[key] = init[key];\n            }\n        }\n    }\n    User.prototype.update = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateUser(_this, done);\n        }, callback);\n    };\n    User.prototype.listGroups = function (callback) {\n        var _this = this;\n        return functions_1.apiWrapper(function (resultsFn) {\n            _this._api.listGroups(null, resultsFn);\n        }, function (data, done) {\n            var groups = [];\n            if (data.data && data.data.length) {\n                groups = data.data.filter(function (group) {\n                    return _this.groups.indexOf(group.id) > -1;\n                });\n            }\n            done(null, groups);\n        }, callback);\n    };\n    User.prototype.listApiKeys = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.asyncStyle(function (done) {\n            options.filter = {\n                ownerId: { $eq: _this.id },\n            };\n            _this._api.listApiKeys(options, done);\n        }, callback);\n    };\n    User.prototype.delete = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.deleteUser(_this.id, done);\n        }, callback);\n    };\n    return User;\n}());\nexports.User = User;\n\n},{\"../../common/functions\":20}],16:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar user_1 = require(\"./user\");\nvar loginHistoryAdapter_1 = require(\"./loginHistoryAdapter\");\n/**\n * User Adapter\n */\nvar UserAdapter = /** @class */ (function () {\n    function UserAdapter() {\n    }\n    UserAdapter.map = function (from, api) {\n        var logins = [];\n        if (from.login_history) {\n            logins = from.login_history.map(function (login) {\n                return loginHistoryAdapter_1.LoginHistoryAdapter.map(login);\n            });\n        }\n        return new user_1.User({\n            fullName: from.full_name,\n            username: from.username,\n            password: from.password,\n            email: from.email,\n            phoneNumber: from.phone_number,\n            address: from.address,\n            termsAccepted: from.is_gtc_accepted,\n            marketingAccepted: from.is_marketing_accepted,\n            groups: from.groups,\n            id: from.id,\n            status: from.status,\n            accountId: from.account_id,\n            emailVerified: from.email_verified,\n            createdAt: from.created_at,\n            creationTime: from.creation_time,\n            passwordChangedTime: from.password_changed_time,\n            twoFactorAuthentication: from.is_totp_enabled,\n            lastLoginTime: from.last_login_time,\n            loginHistory: logins,\n        }, api);\n    };\n    UserAdapter.addMap = function (from) {\n        return {\n            full_name: from.fullName,\n            username: from.username,\n            password: from.password,\n            email: from.email,\n            phone_number: from.phoneNumber,\n            address: from.address,\n            is_gtc_accepted: from.termsAccepted,\n            is_marketing_accepted: from.marketingAccepted,\n            groups: from.groups,\n        };\n    };\n    UserAdapter.updateMap = function (from) {\n        return {\n            full_name: from.fullName,\n            username: from.username,\n            email: from.email,\n            phone_number: from.phoneNumber,\n            address: from.address,\n            is_gtc_accepted: from.termsAccepted,\n            is_marketing_accepted: from.marketingAccepted,\n            groups: from.groups,\n        };\n    };\n    return UserAdapter;\n}());\nexports.UserAdapter = UserAdapter;\n\n},{\"./loginHistoryAdapter\":12,\"./user\":15}],17:[function(require,module,exports){\n(function (process,Buffer){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// this style of import is needed for third party packages that are being ignored by browserify\nvar superagent = require(\"superagent\");\nvar dotenv = require(\"dotenv\");\nvar sdkError_1 = require(\"./sdkError\");\nvar version_1 = require(\"../version\");\nvar functions_1 = require(\"./functions\");\n// tslint:disable-next-line:no-var-requires\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*))(?:Z|(\\+|-)([\\d|:]*))?$/;\nvar JSON_REGEX = /^application\\/json(;.*)?$/i;\nvar MIME_REGEX = /^text\\/plain(;.*)?$/i;\nvar VERSION = version_1.Version.isPublished ? version_1.Version.version : version_1.Version.version + \"+dev\";\nvar userAgent = version_1.Version.packageName + \"-javascript / \" + VERSION;\nvar ApiBase = /** @class */ (function () {\n    function ApiBase(options, responseHandler) {\n        if (responseHandler === void 0) { responseHandler = null; }\n        this.responseHandler = responseHandler;\n        this.ENV_API_KEY = \"MBED_CLOUD_SDK_API_KEY\";\n        this.ENV_HOST = \"MBED_CLOUD_SDK_HOST\";\n        options = options || {};\n        if (dotenv && typeof dotenv.config === \"function\") {\n            dotenv.config();\n        }\n        this.apiKey = options.apiKey || (process && process.env[this.ENV_API_KEY]);\n        this.host = options.host || (process && process.env[this.ENV_HOST]) || \"https://api.us-east-1.mbedcloud.com\";\n        if (!this.apiKey) {\n            throw new sdkError_1.SDKError(\"no api key provided\");\n        }\n        if (this.apiKey.substr(0, 6).toLowerCase() !== \"bearer\") {\n            this.apiKey = \"Bearer \" + this.apiKey;\n        }\n    }\n    /**\n     * Normalizes parameter values:\n     * <ul>\n     * <li>remove nils</li>\n     * <li>keep files and arrays</li>\n     * <li>format to string with `paramToString` for other cases</li>\n     * </ul>\n     * @param {Object.<String, Object>} params The parameters as object properties.\n     * @returns {Object.<String, Object>} normalized parameters.\n     */\n    ApiBase.normalizeParams = function (params) {\n        var newParams = {};\n        for (var key in params) {\n            if (params.hasOwnProperty(key) && params[key] !== undefined && params[key] !== null) {\n                var value = params[key];\n                if (this.isFileParam(value) || Array.isArray(value)) {\n                    newParams[key] = value;\n                }\n                else {\n                    newParams[key] = ApiBase.paramToString(value);\n                }\n            }\n        }\n        return newParams;\n    };\n    /**\n     * Checks whether the given parameter value represents file-like content.\n     * @param param The parameter to check.\n     * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n     */\n    ApiBase.isFileParam = function (param) {\n        // fs.ReadStream in Node.js (but not in runtime like browserify)\n        if (functions_1.isThisNode() &&\n            require(\"fs\") &&\n            param instanceof require(\"fs\").ReadStream) {\n            return true;\n        }\n        // Buffer in Node.js\n        if (typeof Buffer === \"function\" && param instanceof Buffer) {\n            return true;\n        }\n        // Blob in browser\n        if (typeof Blob === \"function\" && param instanceof Blob) {\n            return true;\n        }\n        // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n        if (typeof File === \"function\" && param instanceof File) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns a string representation for an actual parameter.\n     * @param param The actual parameter.\n     * @returns {String} The string representation of <code>param</code>.\n     */\n    ApiBase.paramToString = function (param) {\n        if (param === undefined || param === null) {\n            return \"\";\n        }\n        if (param instanceof Date) {\n            return param.toJSON();\n        }\n        return param.toString();\n    };\n    ApiBase.chooseType = function (types, defaultType) {\n        if (defaultType === void 0) { defaultType = null; }\n        // No type\n        if (!types.length) {\n            return defaultType;\n        }\n        // Default to first entry or default\n        var result = types[0] || defaultType;\n        // Find first preferred type\n        types.some(function (type) {\n            if (MIME_REGEX.test(type)) {\n                result = type;\n                return true;\n            }\n        });\n        return result;\n    };\n    ApiBase.debugLog = function (title, obj) {\n        if (process && process.env && process.env.DEBUG === \"superagent\") {\n            process.stdout.write(\"  \\u001B[1m\\u001B[35msuperagent\\u001B[0m \" + title.toUpperCase() + \" \");\n            // tslint:disable-next-line:no-console\n            console.log(obj);\n        }\n    };\n    /**\n     * Returns the current configuration of this API module\n     */\n    ApiBase.prototype.currentConfig = function () {\n        return { apiKey: this.apiKey, host: this.host };\n    };\n    ApiBase.prototype.request = function (options, callback) {\n        var _this = this;\n        // Allow overrides\n        var requestOptions = options.requestOptions || {};\n        requestOptions.timeout = requestOptions.timeout || 60000;\n        requestOptions.method = requestOptions.method || options.method;\n        requestOptions.query = requestOptions.query || ApiBase.normalizeParams(options.query);\n        requestOptions.headers = requestOptions.headers || ApiBase.normalizeParams(options.headers);\n        requestOptions.acceptHeader = requestOptions.acceptHeader || ApiBase.chooseType(options.acceptTypes);\n        requestOptions.url = requestOptions.url || options.url.replace(/([:])?\\/+/g, function ($0, $1) {\n            return $1 ? $0 : \"/\";\n        });\n        var request = superagent(requestOptions.method, this.host + requestOptions.url);\n        // set query parameters\n        request.query(requestOptions.query);\n        // set header parameters\n        requestOptions.headers.Authorization = this.apiKey;\n        // only override in node\n        if (functions_1.isThisNode()) {\n            requestOptions.headers[\"User-Agent\"] = userAgent;\n        }\n        request.set(requestOptions.headers);\n        // set request timeout\n        request.timeout(requestOptions.timeout);\n        // set accept header\n        if (requestOptions.acceptHeader) {\n            request.accept(requestOptions.acceptHeader);\n        }\n        var body = null;\n        if (Object.keys(options.formParams).length > 0) {\n            if (options.useFormData) {\n                var formParams = ApiBase.normalizeParams(options.formParams);\n                for (var key in formParams) {\n                    if (formParams.hasOwnProperty(key)) {\n                        if (ApiBase.isFileParam(formParams[key])) {\n                            // file field\n                            request.attach(key, formParams[key]);\n                        }\n                        else {\n                            request.field(key, formParams[key]);\n                        }\n                    }\n                }\n            }\n            else {\n                requestOptions.contentType = requestOptions.contentType || \"application/x-www-form-urlencoded\";\n                request.type(requestOptions.contentType);\n                request.send(ApiBase.normalizeParams(options.formParams));\n            }\n        }\n        else if (options.body) {\n            body = options.body;\n            // set content type header\n            requestOptions.contentType = requestOptions.contentType || ApiBase.chooseType(options.contentTypes, \"application/json\");\n            request.type(requestOptions.contentType);\n            // Remove empty or undefined json parameters\n            if (body && body.constructor === {}.constructor && JSON_REGEX.test(requestOptions.contentType)) {\n                body = Object.keys(body).reduce(function (val, key) {\n                    if (body[key] !== null && body[key] !== undefined) {\n                        val[key] = body[key];\n                    }\n                    return val;\n                }, {});\n            }\n            request.send(body);\n        }\n        if (body) {\n            ApiBase.debugLog(\"body\", body);\n        }\n        request.end(function (error, response) {\n            _this.complete(error, response, requestOptions.acceptHeader, callback);\n        });\n        return request;\n    };\n    ApiBase.prototype.complete = function (error, response, acceptHeader, callback) {\n        var sdkError = null;\n        if (error) {\n            var message = error.message;\n            var innerError = error;\n            var details = \"\";\n            if (response) {\n                if (response.error) {\n                    message = response.error.message;\n                }\n                if (response.body && response.body.message) {\n                    message = response.body.message;\n                    if (message.error) {\n                        message = message.error;\n                    }\n                }\n                innerError = response.error || error;\n                details = response.body || response.text;\n            }\n            sdkError = new sdkError_1.SDKError(message, innerError, details, error.status);\n        }\n        if (this.responseHandler) {\n            this.responseHandler(sdkError, response);\n        }\n        if (callback) {\n            var data = null;\n            if (response && !sdkError) {\n                data = response.body || response.text;\n            }\n            // If an object has been returned and we expected json\n            if (data && data.constructor === {}.constructor && JSON_REGEX.test(acceptHeader)) {\n                data = JSON.parse(JSON.stringify(data), function (_key, value) {\n                    // Check for date\n                    if (DATE_REGEX.test(value)) {\n                        return new Date(value);\n                    }\n                    return value;\n                });\n            }\n            callback(sdkError, data);\n        }\n    };\n    return ApiBase;\n}());\nexports.ApiBase = ApiBase;\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n},{\"../version\":24,\"./functions\":20,\"./sdkError\":22,\"_process\":27,\"buffer\":25,\"dotenv\":25,\"fs\":25,\"superagent\":29}],18:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Api meta data\n */\nvar ApiMetadata = /** @class */ (function () {\n    function ApiMetadata(statusCode, errorMessage, headers, body, request) {\n        this.statusCode = statusCode;\n        this.errorMessage = errorMessage;\n        if (headers) {\n            this.headers = headers;\n            this.date = headers.date ? new Date(headers.date) : new Date();\n            this.requestId = headers[\"x-request-id\"];\n        }\n        if (body) {\n            this.object = body.object;\n            this.etag = body.etag;\n        }\n        if (request) {\n            this.method = request.method;\n            this.url = request.url;\n        }\n    }\n    return ApiMetadata;\n}());\nexports.ApiMetadata = ApiMetadata;\n\n},{}],19:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar apiMetadata_1 = require(\"./apiMetadata\");\nvar EndpointsBase = /** @class */ (function () {\n    function EndpointsBase() {\n    }\n    EndpointsBase.prototype.responseHandler = function (error, response) {\n        var statusCode = null;\n        var errorMessage = null;\n        var headers = null;\n        var body = null;\n        var request = null;\n        if (error) {\n            statusCode = error.code;\n            errorMessage = error.message;\n            request = error.innerError;\n        }\n        if (response) {\n            statusCode = response.statusCode;\n            headers = response.headers;\n            body = response.body || response.text;\n            request = response.request || response.req;\n        }\n        this.lastMeta = new apiMetadata_1.ApiMetadata(statusCode, errorMessage, headers, body, request);\n    };\n    EndpointsBase.prototype.getLastMeta = function () {\n        return this.lastMeta;\n    };\n    return EndpointsBase;\n}());\nexports.EndpointsBase = EndpointsBase;\n\n},{\"./apiMetadata\":18}],20:[function(require,module,exports){\n(function (Buffer){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar sdkError_1 = require(\"./sdkError\");\nvar tlvDecoder_1 = require(\"./tlvDecoder\");\n// Inspired by https://github.com/sonnyp/polygoat\n// If a callback is passed, use that after running the passed function, otherwise return a promise chain\nfunction asyncStyle(asyncFn, callbackFn) {\n    if (callbackFn) {\n        try {\n            asyncFn(callbackFn);\n        }\n        catch (error) {\n            callbackFn(new sdkError_1.SDKError(error.message, error));\n        }\n    }\n    else {\n        return new Promise(function (resolve, reject) {\n            try {\n                asyncFn(function (error, response) {\n                    if (error) {\n                        reject(error);\n                    }\n                    else {\n                        resolve(response);\n                    }\n                });\n            }\n            catch (error) {\n                reject(new sdkError_1.SDKError(error.message, error));\n            }\n        });\n    }\n}\nexports.asyncStyle = asyncStyle;\n// Wrap our functions to allow error catching\n// Wraps an api function call and optionally a data transformation function to allow a single point for trapping errors\nfunction apiWrapper(apiFn, transformFn, callbackFn, failOnNotFound) {\n    if (failOnNotFound === void 0) { failOnNotFound = false; }\n    // Use async style\n    return asyncStyle(function (done) {\n        try {\n            // Call the api function\n            apiFn(function (error, data) {\n                if (error) {\n                    if (!failOnNotFound && error.code === 404) {\n                        return done(null, null);\n                    }\n                    else {\n                        return done(error);\n                    }\n                }\n                if (!transformFn) {\n                    return done(null, data);\n                }\n                try {\n                    // Call the transformation function\n                    transformFn(data, done);\n                }\n                catch (error) {\n                    // Catch any errors when transforming the returned data\n                    done(new sdkError_1.SDKError(error.message, error));\n                }\n            });\n        }\n        catch (error) {\n            // Catch any errors when running api calls\n            done(new sdkError_1.SDKError(error.message, error));\n        }\n    }, callbackFn);\n}\nexports.apiWrapper = apiWrapper;\nfunction encodeBase64(payload) {\n    if (typeof btoa === \"function\") {\n        return btoa(payload);\n    }\n    return Buffer.from(payload).toString(\"base64\");\n}\nexports.encodeBase64 = encodeBase64;\nfunction decodeBase64(payload, contentType) {\n    // any so can be used in .isNaN method\n    var result = \"\";\n    // Decode Base64\n    if (typeof atob === \"function\") {\n        result = atob(payload);\n    }\n    else {\n        result = new Buffer(payload, \"base64\").toString(\"binary\");\n    }\n    // According to the swagger, content types can be:\n    // text/plain\n    // application/xml\n    // application/octet-stream\n    // application/exi\n    // application/json\n    // application/link-format\n    // application/senml+json\n    // application/nanoservice-tlv\n    // application/vnd.oma.lwm2m+text\n    // application/vnd.oma.lwm2m+opaq\n    // application/vnd.oma.lwm2m+tlv\n    // application/vnd.oma.lwm2m+json\n    if (contentType) {\n        if (contentType.indexOf(\"tlv\") > -1) {\n            // Decode tlv\n            try {\n                return tlvDecoder_1.decodeTlv(result);\n                // tslint:disable-next-line:no-empty\n            }\n            catch (e) { }\n        }\n        /*\n        else if (contentType.indexOf(\"json\") > -1) {\n            // Decode json\n            try {\n                return JSON.parse(result);\n            } catch(e) {}\n        }\n        */\n    }\n    // if string value is a number, then return number, otherwise just return the string\n    return !isNaN(result) ? Number(result) : result;\n}\nexports.decodeBase64 = decodeBase64;\nfunction encodeInclude(include) {\n    if (!include || !include.length) {\n        return null;\n    }\n    return include.map(camelToSnake).join(\",\");\n}\nexports.encodeInclude = encodeInclude;\nfunction snakeToCamel(snake) {\n    return snake.replace(/(\\_\\w)/g, function (match) {\n        return match[1].toUpperCase();\n    });\n}\nexports.snakeToCamel = snakeToCamel;\nfunction camelToSnake(camel) {\n    return camel.replace(/([A-Z]+?)/g, function (match) {\n        return \"_\" + match.toLowerCase();\n    });\n}\nexports.camelToSnake = camelToSnake;\nfunction extractFilter(filter, name, operator, defaultValue) {\n    if (operator === void 0) { operator = \"$eq\"; }\n    if (defaultValue === void 0) { defaultValue = null; }\n    if (filter && filter[name]) {\n        var value = filter[name];\n        if (value.constructor !== {}.constructor) {\n            return value;\n        }\n        switch (operator) {\n            case \"$ne\": {\n                if (value.$ne) {\n                    return value.$ne;\n                }\n                break;\n            }\n            case \"$gte\": {\n                if (value.$gte) {\n                    return value.$gte;\n                }\n                break;\n            }\n            case \"$lte\": {\n                if (value.$lte) {\n                    return value.$lte;\n                }\n                break;\n            }\n            case \"$in\": {\n                if (value.$in) {\n                    return value.$in;\n                }\n                break;\n            }\n            case \"$nin\": {\n                if (value.$nin) {\n                    return value.$nin;\n                }\n                break;\n            }\n            default: {\n                if (value.$eq) {\n                    return value.$eq;\n                }\n                break;\n            }\n        }\n    }\n    return defaultValue;\n}\nexports.extractFilter = extractFilter;\nfunction encodeFilter(filter, map, nested) {\n    if (map === void 0) { map = { from: [], to: [] }; }\n    if (nested === void 0) { nested = []; }\n    if (!filter) {\n        return \"\";\n    }\n    function encode(name, operator, value, prefix) {\n        if (prefix === void 0) { prefix = \"\"; }\n        if (value instanceof Date) {\n            value = value.toISOString();\n        }\n        if (typeof value === \"boolean\") {\n            value = value.toString();\n        }\n        if (prefix) {\n            prefix = camelToSnake(prefix);\n            prefix = prefix + \"__\";\n        }\n        else {\n            // Don't encode nested names\n            var index = map.from.indexOf(name);\n            name = (index > -1) ? map.to[index] : camelToSnake(name);\n        }\n        var suffix = operator.replace(\"$\", \"\");\n        if (suffix === \"ne\") {\n            suffix = \"neq\";\n        }\n        if (suffix === \"eq\") {\n            suffix = \"\";\n        } // Needs to removed when implemented properly in APIs\n        if (suffix) {\n            suffix = \"__\" + suffix;\n        }\n        return \"\" + prefix + name + suffix + \"=\" + value;\n    }\n    return Object.keys(filter).map(function (key) {\n        // Support bare { key: value }\n        if (filter[key].constructor !== {}.constructor) {\n            return encode(key, \"\", filter[key]);\n        }\n        return Object.keys(filter[key]).map(function (operator) {\n            if (nested.indexOf(key) > -1) {\n                // Support bare { key: value }\n                if (filter[key][operator].constructor !== {}.constructor) {\n                    return encode(operator, \"\", filter[key][operator], key);\n                }\n                return Object.keys(filter[key][operator]).map(function (sub) {\n                    return encode(operator, sub, filter[key][operator][sub], key);\n                }).join(\"&\");\n            }\n            return encode(key, operator, filter[key][operator]);\n        }).join(\"&\");\n    }).join(\"&\");\n}\nexports.encodeFilter = encodeFilter;\nfunction decodeFilter(from, map, nested) {\n    if (map === void 0) { map = { from: [], to: [] }; }\n    if (nested === void 0) { nested = []; }\n    var filter = {};\n    function decodeName(name) {\n        var index = map.to.indexOf(name);\n        return (index > -1) ? map.from[index] : snakeToCamel(name);\n    }\n    function addOperator(comparisonObject, operator, value) {\n        if (!operator) {\n            operator = \"eq\";\n        } // Needs to removed when implemented properly in APIs\n        if (operator === \"neq\") {\n            operator = \"ne\";\n        }\n        operator = \"$\" + operator;\n        comparisonObject[operator] = value;\n    }\n    from = decodeURIComponent(from);\n    from.split(\"&\").forEach(function (attrib) {\n        var match = attrib.match(/^(.+)=(.+)$/);\n        if (match) {\n            var value = match[2];\n            var bits = match[1].split(\"__\");\n            var name_1 = decodeName(bits[0]);\n            if (!filter[name_1]) {\n                filter[name_1] = {};\n            }\n            if (nested.indexOf(name_1) > -1) {\n                var nestedName = bits[1]; // Don't decode nested names\n                if (!filter[name_1][nestedName]) {\n                    filter[name_1][nestedName] = {};\n                }\n                addOperator(filter[name_1][nestedName], bits[2], value);\n                return;\n            }\n            addOperator(filter[name_1], bits[1], value);\n        }\n    });\n    return filter;\n}\nexports.decodeFilter = decodeFilter;\nfunction ensureArray(item) {\n    return item instanceof Array ? item : [item];\n}\nexports.ensureArray = ensureArray;\nfunction matchWithWildcard(input, matchWith) {\n    // if we have nothing to match with, return false\n    if (matchWith === null || matchWith === undefined || matchWith === \"\") {\n        return false;\n    }\n    // if input is empty or * then we're listening to everything so return true\n    if (input === null || input === undefined || input === \"\" || input === \"*\") {\n        return true;\n    }\n    // if wildcard used, match on begining of string\n    if (input.endsWith(\"*\")) {\n        return matchWith.startsWith(input.slice(0, -1));\n    }\n    // no wildcard so match strings explicitly\n    return input === matchWith;\n}\nexports.matchWithWildcard = matchWithWildcard;\nfunction dateToBillingMonth(date) {\n    // make sure date is actually a Date object;\n    date = new Date(date);\n    // javascript uses 0-indexed months\n    return date.getFullYear() + \"-\" + (\"0\" + (date.getMonth() + 1)).slice(-2);\n}\nexports.dateToBillingMonth = dateToBillingMonth;\nfunction isThisNode() {\n    return typeof window === \"undefined\" && typeof require === \"function\";\n}\nexports.isThisNode = isThisNode;\n\n}).call(this,require(\"buffer\").Buffer)\n},{\"./sdkError\":22,\"./tlvDecoder\":23,\"buffer\":25}],21:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * ## List Response\n * Most listing operations are paginated and respond with truncated results. This object comprises the information related to one page.\n * For operations over a full collection, it is recommended to use the [Paginator](./paginator.html) instead.\n */\nvar ListResponse = /** @class */ (function () {\n    function ListResponse(from, data) {\n        this.after = from.after;\n        this.hasMore = from.has_more || from.hasMore;\n        this.pageSize = (\"limit\" in from) ? from.limit : (\"pageSize\" in from) ? from.pageSize : undefined;\n        this.order = from.order;\n        // default to 0 if either is undefined\n        this.totalCount = from.total_count || from.totalCount || 0;\n        this.continuationMarker = from.continuation_marker || from.continuationMarker;\n        this.data = data || [];\n        // Setting limit for backward compatibility\n        var limitParameterName = \"limit\";\n        this[limitParameterName] = this.pageSize;\n    }\n    return ListResponse;\n}());\nexports.ListResponse = ListResponse;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SDKError = /** @class */ (function (_super) {\n    __extends(SDKError, _super);\n    function SDKError(message, innerError, details, code) {\n        var _this = _super.call(this, message) || this;\n        _this.innerError = innerError;\n        _this.details = details;\n        _this.code = code;\n        return _this;\n    }\n    return SDKError;\n}(Error));\nexports.SDKError = SDKError;\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typeMask = parseInt(\"11000000\", 2);\nvar idLengthMask = parseInt(\"00100000\", 2); // Length of ID 0=8bits 1=16bits\nvar lengthTypeMask = parseInt(\"00011000\", 2);\nvar lengthMask = parseInt(\"00000111\", 2);\nvar types = {\n    OBJECT_INSTAN: parseInt(\"00000000\", 2),\n    RESOURCE_INST: parseInt(\"01000000\", 2),\n    MULT_RESOURCE: parseInt(\"10000000\", 2),\n    RESOURCE_VALU: parseInt(\"11000000\", 2),\n};\nvar lengthType = {\n    ONE_BYTE: parseInt(\"00001000\", 2),\n    TWO_BYTE: parseInt(\"00010000\", 2),\n    TRE_BYTE: parseInt(\"00011000\", 2),\n    OTR_BYTE: parseInt(\"00000000\", 2),\n};\nfunction findIdLength(byte) {\n    return (byte & idLengthMask) === idLengthMask ? 2 : 1;\n}\nfunction findValueLength(byte) {\n    if ((byte & lengthTypeMask) === lengthType.ONE_BYTE) {\n        return 1;\n    }\n    else if ((byte & lengthTypeMask) === lengthType.TWO_BYTE) {\n        return 2;\n    }\n    else if ((byte & lengthTypeMask) === lengthType.TRE_BYTE) {\n        return 3;\n    }\n    else {\n        return (byte & lengthMask);\n    }\n}\nfunction decode(bytes, result, path) {\n    if (result === void 0) { result = {}; }\n    if (path === void 0) { path = \"\"; }\n    if (!bytes || bytes.length < 1) {\n        return result;\n    }\n    var byte = bytes[0];\n    var type = byte & typeMask;\n    var idLength = findIdLength(byte);\n    var length = findValueLength(byte);\n    var getString = function (b) {\n        return String.fromCharCode(b);\n    };\n    var combineBytes = function (acc, cur, idx, arr) {\n        var step = arr.length - idx - 1;\n        return acc + (cur << (8 * step));\n    };\n    var offset = 1;\n    var id = bytes.slice(offset, offset + idLength).reduce(combineBytes, 0);\n    offset = offset + idLength;\n    var valueLength = length;\n    if ((byte & lengthTypeMask) !== lengthType.OTR_BYTE) {\n        // Need to get length of value from bytes\n        valueLength = bytes.slice(offset, offset + length).reduce(combineBytes, 0);\n        offset = offset + length;\n    }\n    if (type === types.MULT_RESOURCE) {\n        // Go into multiple resources\n        decode(bytes.slice(offset, offset + valueLength), result, path + \"/\" + id);\n    }\n    else {\n        var valueBytes = bytes.slice(offset, offset + valueLength);\n        var hasZero = valueBytes.some(function (b) {\n            return b === 0;\n        });\n        var value = hasZero ? valueBytes.reduce(combineBytes, 0) : valueBytes.map(getString).join(\"\");\n        result[path + \"/\" + id] = value;\n    }\n    offset = offset + valueLength;\n    decode(bytes.slice(offset), result, path);\n    return result;\n}\nfunction decodeTlv(value) {\n    var bytes = value.split(\"\").map(function (char) {\n        return char.charCodeAt(0);\n    });\n    return decode(bytes);\n}\nexports.decodeTlv = decodeTlv;\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Version = /** @class */ (function () {\n    function Version() {\n    }\n    // TODO Autoversion currently does not support modifying this type of file. Can export once autoversion is updated\n    Version.packageName = \"mbed-cloud-sdk\";\n    Version.version = \"1.0.0\"; // auto\n    Version.commit = \"42069\"; // auto\n    Version.testrunnerVersion = \"1.0.0\"; // auto\n    Version.isPublished = false; // auto\n    return Version;\n}());\nexports.Version = Version;\n\n},{}],25:[function(require,module,exports){\n\n},{}],26:[function(require,module,exports){\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n},{}],27:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],28:[function(require,module,exports){\nfunction Agent() {\n  this._defaults = [];\n}\n\n[\"use\", \"on\", \"once\", \"set\", \"query\", \"type\", \"accept\", \"auth\", \"withCredentials\", \"sortQuery\", \"retry\", \"ok\", \"redirects\",\n \"timeout\", \"buffer\", \"serialize\", \"parse\", \"ca\", \"key\", \"pfx\", \"cert\"].forEach(function(fn) {\n  /** Default setting for all requests from this agent */\n  Agent.prototype[fn] = function(/*varargs*/) {\n    this._defaults.push({fn:fn, arguments:arguments});\n    return this;\n  }\n});\n\nAgent.prototype._setDefaults = function(req) {\n    this._defaults.forEach(function(def) {\n      req[def.fn].apply(req, def.arguments);\n    });\n};\n\nmodule.exports = Agent;\n\n},{}],29:[function(require,module,exports){\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('component-emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar ResponseBase = require('./response-base');\nvar Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify\n};\n\n/**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) { // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[\\/+]json($|[^-\\w])/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str) {\n  var parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch(custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (1 === arguments.length) pass = '';\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    };\n  }\n\n  var encoder = function(string) {\n    if ('function' === typeof btoa) {\n      return btoa(string);\n    }\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = (this.xhr = request.getXHR());\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\nrequest.agent = function() {\n  return new Agent();\n};\n\n[\"GET\", \"POST\", \"OPTIONS\", \"PATCH\", \"PUT\", \"DELETE\"].forEach(function(method) {\n  Agent.prototype[method.toLowerCase()] = function(url, fn) {\n    var req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype['delete'];\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn) {\n  var req = request('GET', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn) {\n  var req = request('HEAD', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn) {\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  var req = request('DELETE', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn) {\n  var req = request('PATCH', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn) {\n  var req = request('POST', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn) {\n  var req = request('PUT', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n},{\"./agent-base\":28,\"./is-object\":30,\"./request-base\":31,\"./response-base\":32,\"component-emitter\":26}],30:[function(require,module,exports){\n'use strict';\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n},{}],31:[function(require,module,exports){\n'use strict';\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(var option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count, fn){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nRequestBase.prototype._shouldRetry = function(err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n  if (this._retryCallback) {\n    try {\n      var override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch(e) {\n      console.error(e);\n    }\n  }\n  if (res && res.status && res.status >= 500 && res.status != 501) return true;\n  if (err) {\n    if (err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code == 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject) {\n      self.end(function(err, res) {\n        if (err) innerReject(err);\n        else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype['catch'] = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n  // name should be either a string or an object.\n  if (null === name || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function(user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + base64Encoder(user + ':' + pass));\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', 'Bearer ' + user);\n      break;\n  }\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on == undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function(n){\n  if ('number' !== typeof n) {\n    throw TypeError(\"Invalid argument\");\n  }\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function() {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header,\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if ('function' === typeof this._sort) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = function() {console.trace(\"Unsupported\");}\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n};\n\n},{\"./is-object\":30}],32:[function(require,module,exports){\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.created = 201 == status;\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n    this.unprocessableEntity = 422 == status;\n};\n\n},{\"./utils\":33}],33:[function(require,module,exports){\n'use strict';\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, changesOrigin){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  // secuirty\n  if (changesOrigin) {\n    delete header['authorization'];\n    delete header['cookie'];\n  }\n  return header;\n};\n\n},{}]},{},[4])(4)\n});\n"],"sourceRoot":"../lib"}